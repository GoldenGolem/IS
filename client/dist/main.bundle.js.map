{"version":3,"sources":["./client/src/$_gendir lazy","./client/src/app/app.component.html","./client/src/app/app.component.scss","./client/src/app/app.component.ts","./client/src/app/app.module.ts","./client/src/app/app.routes.ts","./client/src/app/core/can-deactivate.guard.ts","./client/src/app/core/core.module.ts","./client/src/app/core/core.routes.ts","./client/src/app/core/home.component.html","./client/src/app/core/home.component.ts","./client/src/app/core/http.factory.ts","./client/src/app/core/http.interceptor.ts","./client/src/app/core/navbar.component.html","./client/src/app/core/navbar.component.scss","./client/src/app/core/navbar.component.ts","./client/src/app/core/page-not-found.component.ts","./client/src/app/user/auth.service.ts","./client/src/app/user/authenticated.guard.ts","./client/src/app/user/forgot-password.component.html","./client/src/app/user/forgot-password.component.ts","./client/src/app/user/login.component.html","./client/src/app/user/login.component.ts","./client/src/app/user/oauth.component.ts","./client/src/app/user/profile.component.html","./client/src/app/user/profile.component.ts","./client/src/app/user/reset-password.component.html","./client/src/app/user/reset-password.component.ts","./client/src/app/user/signup.component.html","./client/src/app/user/signup.component.ts","./client/src/app/user/unauthenticated.guard.ts","./client/src/app/user/user.module.ts","./client/src/app/user/user.routes.ts","./client/src/environments/environment.ts","./client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./admin/admin.module\": [\n\t\t\"./client/src/app/admin/admin.module.ts\",\n\t\t\"common\",\n\t\t\"admin.module\"\n\t],\n\t\"./blog/blog.module\": [\n\t\t\"./client/src/app/blog/blog.module.ts\",\n\t\t\"common\"\n\t],\n\t\"./file/file.module\": [\n\t\t\"./client/src/app/file/file.module.ts\",\n\t\t\"common\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./client/src/$$_gendir lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/$$_gendir lazy\n// module id = ./client/src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<ng2-slim-loading-bar [color]=\\\"'steelblue'\\\"></ng2-slim-loading-bar>\\n<app-navbar></app-navbar>\\n<section>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/app.component.html\n// module id = ./client/src/app/app.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/app.component.scss\n// module id = ./client/src/app/app.component.scss\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n  ActivatedRoute,\n  Router,\n  NavigationStart,\n  NavigationEnd,\n  NavigationCancel,\n  NavigationError\n} from '@angular/router';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/filter';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  private _DOMTitleChangeSub;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _titleService: Title\n  ) {}\n\n  ngOnInit() {\n    this._setupDOMTitleChanges();\n  }\n\n  ngOnDestroy() {\n    this._DOMTitleChangeSub.unsubscribe();\n  }\n\n  /**\n   * Subscribe to route changes and update DOM title with route titles.\n   */\n  private _setupDOMTitleChanges(): void {\n    const baseTitle = 'Meangular | ';\n\n    this._DOMTitleChangeSub = this._router.events\n      .filter(event => event instanceof NavigationEnd)\n      .map(event => this._route)\n      .map(route => {\n        while (route.firstChild) {\n          route = route.firstChild;\n        }\n        return route;\n      })\n      .filter(route => route.outlet === 'primary')\n      .map(route => route.data['value'])\n      .subscribe(data => {\n        let title = baseTitle + data['title'];\n\n        if (data.resolveData && data.resolveData.title) {\n          title += ' ' + data.resolveData.title;\n        }\n\n        this._titleService.setTitle(title);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { Http, HttpModule, RequestOptions, XHRBackend } from '@angular/http';\nimport { AUTH_PROVIDERS, AuthHttp, AuthConfig } from 'angular2-jwt';\nimport { SlimLoadingBarModule, SlimLoadingBarService } from 'ng2-slim-loading-bar';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { UserModule } from './user/user.module';\nimport { AppRoutingModule } from './app.routes';\nimport { httpFactory } from './core/http.factory';\n\n// Needed for angular2-jwt to work properly. See:\n// https://github.com/auth0/angular2-jwt/issues/258#issuecomment-272223420\nexport function authHttpServiceFactory(http: Http, options: RequestOptions) {\n  return new AuthHttp( new AuthConfig({}), http, options);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    HttpModule,\n    SlimLoadingBarModule.forRoot(),\n\n    AppRoutingModule,\n    UserModule,\n    CoreModule,\n  ],\n  exports: [\n    SlimLoadingBarModule\n  ],\n  providers: [\n    // Needed for angular2-jwt to work properly. See:\n    // https://github.com/auth0/angular2-jwt/issues/258#issuecomment-272223420\n    {\n      provide: AuthHttp,\n      useFactory: authHttpServiceFactory,\n      deps: [ Http, RequestOptions ]\n    },\n    // Use custom http service which uses slim loading bar.\n    // See `./core/http.interceptor.ts`\n    {\n      provide: Http,\n      useFactory: httpFactory,\n      deps: [ XHRBackend, RequestOptions, SlimLoadingBarService]\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { PreloadingStrategy, RouterModule, Route, Routes } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\n// Add lazy-loaded routes/modules here\nconst APP_ROUTES: Routes = [\n  {\n    path: 'admin',\n    loadChildren: './admin/admin.module#AdminModule'\n  },\n  {\n    path: 'blog',\n    loadChildren: './blog/blog.module#BlogModule',\n    data: {\n      preload: true\n    }\n  },\n  {\n    path: 'file',\n    loadChildren: './file/file.module#FileModule',\n    data: {\n      preload: true\n    }\n  }\n];\n\n// Custom preloading strategy. Preloads routes with data: {preload: true}\nexport class CustomPreloadingStrategy implements PreloadingStrategy {\n  preload(route: Route, load: Function): Observable<any> {\n    return route.data && route.data['preload'] ? load() : Observable.of(null);\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES, {\n      preloadingStrategy: CustomPreloadingStrategy\n    })\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    CustomPreloadingStrategy\n  ]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/app.routes.ts","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n  canDeactivate(component: CanComponentDeactivate) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/core/can-deactivate.guard.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { UserModule } from '../user/user.module';\nimport { HomeComponent } from './home.component';\nimport { NavbarComponent } from './navbar.component';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { CanDeactivateGuard } from './can-deactivate.guard';\nimport { CoreRoutingModule } from './core.routes';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    NavbarComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    BsDropdownModule.forRoot(),\n\n    CoreRoutingModule\n  ],\n  exports: [\n    NavbarComponent,\n  ],\n  providers: [\n    CanDeactivateGuard\n  ]\n})\nexport class CoreModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/core/core.module.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\nimport { PageNotFoundComponent } from './page-not-found.component';\n\nconst CORE_ROUTES: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    data: {\n      title: 'Home'\n    }\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent,\n    data: {\n      title: '404 - Page Not Found'\n    }\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(CORE_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CoreRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/core/core.routes.ts","module.exports = \"<h1>Home page</h1>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/core/home.component.html\n// module id = ./client/src/app/core/home.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent {}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/core/home.component.ts","import {XHRBackend, Http, RequestOptions} from '@angular/http';\nimport {InterceptedHttp} from './http.interceptor';\n\nimport { SlimLoadingBarService } from 'ng2-slim-loading-bar';\n\n/**\n * Use custom implementation of http service. This is needed so that the slim\n * loading bar displays during xhr requests.\n *\n * @export\n * @param {XHRBackend} xhrBackend\n * @param {RequestOptions} requestOptions\n * @param {SlimLoadingBarService} slimLoadingBarService\n * @returns {Http}\n */\nexport function httpFactory(\n  xhrBackend: XHRBackend,\n  requestOptions: RequestOptions,\n  slimLoadingBarService: SlimLoadingBarService\n): Http {\n  return new InterceptedHttp(xhrBackend, requestOptions, slimLoadingBarService);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/core/http.factory.ts","import { Injectable } from '@angular/core';\nimport {\n  ConnectionBackend,\n  RequestOptions,\n  Request,\n  RequestOptionsArgs,\n  Response,\n  Http,\n  Headers\n} from '@angular/http';\nimport { SlimLoadingBarService } from 'ng2-slim-loading-bar';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/finally';\n\n/**\n * Add functionality to normal http service. Slim loading bar displays when\n * requests are in progress. Slim loading bar goes away once a response or error\n * is returned.\n *\n * @export\n */\n@Injectable()\nexport class InterceptedHttp extends Http {\n  constructor(\n    backend: ConnectionBackend,\n    defaultOptions: RequestOptions,\n    private _slimLoadingBarService: SlimLoadingBarService\n  ) {\n    super(backend, defaultOptions);\n  }\n\n  public request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\n    this._slimLoadingBarService.start();\n\n    return super.request(url, options)\n      .finally(() => this._slimLoadingBarService.complete());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/core/http.interceptor.ts","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<div class=\\\"navbar-header\\\">\\n\\t\\t\\t<a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Home</a>\\n\\t\\t</div>\\n\\t\\t<ul class=\\\"nav navbar-nav pull-left\\\">\\n      <li>\\n        <a\\n          [routerLink]=\\\"['/file/list']\\\"\\n          routerLinkActive=\\\"active\\\"\\n          [routerLinkActiveOptions]=\\\"{exact: false}\\\">\\n          File\\n        </a>\\n      </li>\\n\\t\\t</ul>\\n\\t\\t<ul class=\\\"nav navbar-nav pull-right\\\">\\n\\t\\t\\t<li *ngIf=\\\"!auth.loggedIn\\\">\\n        <a routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">\\n          Log In\\n        </a>\\n      </li>\\n\\t\\t\\t<li *ngIf=\\\"!auth.loggedIn\\\">\\n        <a routerLink=\\\"/signup\\\" routerLinkActive=\\\"active\\\">\\n          Sign Up\\n        </a>\\n      </li>\\n\\t\\t\\t<li dropdown *ngIf=\\\"auth.loggedIn && auth.isAdmin\\\">\\n        <a class=\\\"pointer\\\" dropdownToggle>\\n          Admin\\n          <i class=\\\"fa fa-angle-down\\\"></i>\\n        </a>\\n        <ul class=\\\"dropdown-menu\\\">\\n          <li>\\n            <a\\n              class=\\\"dropdown-item\\\"\\n              routerLink=\\\"/admin/file/list\\\"\\n              routerLinkActive=\\\"active\\\">\\n              File\\n            </a>\\n            <a\\n              class=\\\"dropdown-item\\\"\\n              routerLink=\\\"/admin/user/list\\\"\\n              routerLinkActive=\\\"active\\\">\\n              Users\\n            </a>\\n          </li>\\n        </ul>\\n      </li>\\n\\t\\t\\t<li *ngIf=\\\"auth.loggedIn\\\">\\n        <a routerLink=\\\"/profile\\\" routerLinkActive=\\\"active\\\">\\n          Profile\\n        </a>\\n      </li>\\n\\t\\t\\t<li *ngIf=\\\"auth.loggedIn\\\">\\n        <a class=\\\"pointer\\\" (click)=\\\"logout()\\\">\\n          Logout\\n        </a>\\n      </li>\\n\\t\\t</ul>\\n\\t</div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/core/navbar.component.html\n// module id = ./client/src/app/core/navbar.component.html\n// module chunks = main","module.exports = \".active {\\n  font-weight: bold; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/core/navbar.component.scss\n// module id = ./client/src/app/core/navbar.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\nimport { AuthService } from '../user/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n  constructor(public auth: AuthService) {}\n\n  public logout(): void {\n    this.auth.logout();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/core/navbar.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  template: `\n    <h1>404 - Page Not Found</h1>\n  `\n})\nexport class PageNotFoundComponent {}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/core/page-not-found.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AuthHttp, JwtHelper } from 'angular2-jwt';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/toPromise';\n\nimport { User } from './user';\n\ninterface IAuthResponse {\n  readonly success?: boolean;\n  readonly authenticated?: boolean;\n  readonly user?: User;\n  readonly token?: string;\n  readonly redirect?: string;\n}\n\n@Injectable()\nexport class AuthService {\n  /**\n   * Regex pattern used for form validation\n   */\n  // tslint:disable-next-line\n  public emailPattern: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  /**\n   * Auth errors stored here for alerting to user\n   */\n  public error: string;\n  /**\n   * Admin status gotten from user roles\n   */\n  public isAdmin = false;\n  public loggedIn = false;\n  private _jwtHelper: JwtHelper = new JwtHelper();\n  private _user;\n\n  constructor(\n    private _http: Http,\n    private _router: Router,\n    private _authHttp: AuthHttp\n  ) {\n    this.getAuthenticatedState();\n    this._watchForRedirectTarget();\n\n    // Set default redirect target. Localstorage needed for oauth auth flow.\n    localStorage['redirect'] = '/';\n  }\n\n  /**\n   * Change user's password\n   * @param {Object} password form value - Password form value\n   * @return {Observable<IAuthResponse>}\n   */\n  public changePassword(password: string, confirmPassword: string): Observable<IAuthResponse> {\n    return this._authHttp.put('/api/account/password',\n      {password, confirmPassword})\n      .map(res => res.json());\n  }\n\n  /**\n   * Send forgot request to server so user can reset password\n   * @param {String} email - User's email\n   * @return {Observable<IAuthResponse>}\n   */\n  public forgot(email: string): Observable<IAuthResponse> {\n    return this._http.post('/api/forgot', {email})\n      .map(res => res.json());\n  }\n\n  /**\n   * Get whether user is authenticated or not\n   * @return {Promise<Boolean>}\n   */\n  public getAuthenticatedState(): Promise<Boolean> {\n    const token = localStorage['id_token'];\n    const tokenIsPresentAndExpired = token\n      && this._jwtHelper.isTokenExpired(token);\n\n    if (!token || tokenIsPresentAndExpired) {\n      return Promise.resolve(false);\n    }\n\n    return this._authHttp.get('/api/authenticate')\n      .map(res => res.json())\n      .toPromise()\n      .then(res => {\n        if (res && res.user && res.token) {\n          this.setAuthenticatedUser(res);\n          return true;\n        }\n\n        return false;\n      });\n  }\n\n  /**\n   * Login user using email and password\n   * @param {String} email\n   * @param {String} password\n   */\n  public login(email: string, password: string): void {\n    const redirect = localStorage['redirect'];\n\n    this._http.post('/api/login', {email, password, redirect})\n      .map(res => res.json())\n      .subscribe(res => this._onAuthenticated.call(this, res),\n                err => this.error = JSON.parse(err._body).msg);\n  }\n\n  /**\n   * Logout user and return to homepage.\n   */\n  public logout(): void {\n    if (!localStorage['id_token']) {\n      return;\n    }\n\n    this._authHttp.get('/api/logout')\n      .subscribe(() => {\n        this._setUnauthenticatedUser();\n        this._router.navigate(['/']);\n      });\n  }\n\n  /**\n   * Reset user password\n   * @param {String} password - Password\n   * @param {String} confirmPassword - Password confirmation\n   * @param {String} token - Password reset token\n   * @return {Observable<IAuthResponse>}\n   */\n  public resetPassword(password: string, confirmPassword: string, token: string): Observable<IAuthResponse> {\n    return this._http.post('/api/reset/' + token, {password, confirmPassword})\n      .map(res => res.json());\n  }\n\n  /**\n   * Set user after authentication. Public for oauth.\n   * @param {IAuthResponse} res - Response object from server\n   */\n  public setAuthenticatedUser(res: IAuthResponse): void {\n    this._user = res.user;\n    this.isAdmin = this._user.roles.indexOf('admin') > -1;\n    this.loggedIn = true;\n\n    localStorage['id_token'] = res.token;\n  }\n\n  /**\n   * Signup user.\n   * @param {User} user - User info for signup\n   */\n  public signup(user): void {\n    user.redirect = localStorage['redirect'];\n\n    this._http.post('/api/signup', user)\n      .map(res => res.json())\n      .subscribe(res => this._onAuthenticated.call(this, res),\n                err => this.error = JSON.parse(err._body).msg);\n  }\n\n  /**\n   * Update user.\n   * @param {User} user - User info to update\n   * @return {Observable<IAuthResponse>}\n   */\n  public updateUser(user: User): Observable<IAuthResponse> {\n    return this._authHttp.put('/api/account/profile', user)\n      .map(res => res.json());\n  }\n\n  /**\n   * Retrieve user.\n   */\n  public user() {\n    return this._user;\n  }\n\n  private _onAuthenticated(res): void {\n    this.setAuthenticatedUser(res);\n    this._router.navigateByUrl(localStorage['redirect'] || '/');\n  }\n\n  private _setUnauthenticatedUser() {\n    this._user = null;\n    this.isAdmin = false;\n    this.loggedIn = false;\n\n    localStorage.removeItem('id_token');\n  }\n\n  /**\n   * Watch for route changes so a redirect target can be saved\n   * for the user to be redirected to after authentication.\n   */\n  private _watchForRedirectTarget(): void {\n    this._router.events\n      .filter(event => event instanceof NavigationEnd)\n      .filter(event => event['url'] !== '/login')\n      .filter(event => event['url'] !== '/signup')\n      .filter(event => event['url'] !== '/oauth')\n      .subscribe(event => localStorage['redirect'] = event['url']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/user/auth.service.ts","import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthenticatedGuard implements CanActivate {\n    constructor(private _authService: AuthService, private _router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n      return this._authService.getAuthenticatedState()\n        .then(isAuthenticated => {\n          if (!isAuthenticated) {\n            this._router.navigate(['/login']);\n          }\n\n          return isAuthenticated;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/user/authenticated.guard.ts","module.exports = \"<div class=\\\"jumbotron col-sm-6 col-sm-offset-2\\\">\\n  <form novalidate [formGroup]=\\\"forgotForm\\\" (submit)=\\\"forgot()\\\">\\n    <fieldset>\\n      <legend>Forgot Password</legend>\\n      <div\\n        class=\\\"form-group\\\"\\n        [class.has-error]=\\\"!forgotForm.controls['email'].valid\\n          && forgotForm.controls['email'].touched\\\">\\n        <label class=\\\"control-label\\\" for=\\\"email\\\">\\n          Email\\n        </label>\\n        <input\\n          class=\\\"form-control\\\" \\n          id=\\\"email\\\"\\n          type=\\\"email\\\"\\n          [formControl]=\\\"forgotForm.controls['email']\\\"\\n        />\\n        <span\\n          class=\\\"help-block\\\"\\n          *ngIf=\\\"forgotForm.controls['email'].hasError('required')\\n            && forgotForm.controls['email'].touched\\\">\\n          Email is required\\n        </span>\\n        <span\\n          class=\\\"help-block\\\"\\n          *ngIf=\\\"forgotForm.controls['email'].hasError('pattern')\\\">\\n          Must be a proper email\\n        </span>\\n      </div>\\n      <button\\n        class=\\\"btn btn-primary\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"forgotForm.invalid\\\">\\n        Reset Password\\n      </button>\\n    </fieldset>\\n  </form>\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"message\\\">\\n    {{message}}\\n  </div>\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"authService.error\\\">\\n    {{authService.error}}\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/user/forgot-password.component.html\n// module id = ./client/src/app/user/forgot-password.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html'\n})\nexport class ForgotPasswordComponent implements OnInit {\n  public forgotForm: FormGroup;\n  public message = '';\n\n  constructor(\n    public authService: AuthService,\n    private _fb: FormBuilder\n  ) {}\n\n  public forgot(): void {\n    const {email} = this.forgotForm.value;\n    this.authService.forgot(email)\n      .subscribe(res => this._flashMessage('Email with reset link sent'),\n                 err => this._flashError('Could not process'));\n  }\n\n  private _flashError(errMessage): void {\n    this.authService.error = errMessage;\n    setTimeout(() => this.authService.error = null, 3000);\n  }\n\n  private _flashMessage(message): void {\n    this.message = message;\n    setTimeout(() => this.message = null, 3000);\n  }\n\n  ngOnInit() {\n    this.forgotForm = this._fb.group({\n      'email': ['', [\n        Validators.required,\n        Validators.pattern(this.authService.emailPattern)\n      ]]\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/user/forgot-password.component.ts","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3\\\">\\n\\t\\t<div class=\\\"jumbotron\\\">\\n\\t\\t\\t<h2>Enter your credentials.</h2>\\n\\t\\t\\t<form (ngSubmit)=\\\"login()\\\">\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"email\\\">E-mail address</label>\\n\\t\\t\\t\\t\\t<input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"password\\\">Password</label>\\n\\t\\t\\t\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" id=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\tname=\\\"password\\\" class=\\\"form-control\\\">\\n\\t\\t\\t\\t</div>\\n        <small>\\n          <a [routerLink]=\\\"['/forgot-password']\\\">Forgot your password?</a>\\n        </small>\\n        <br />\\n        <div *ngIf=\\\"authService.error\\\" class=\\\"alert alert-danger\\\">\\n          {{authService.error}}\\n        </div>\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Log In</button>\\n\\t\\t\\t</form>\\n\\n      <hr>\\n\\n      <a class=\\\"btn btn-default\\\" href=\\\"/auth/google\\\">\\n        <i class=\\\"fa fa-google\\\"></i> \\n        Log In with Google\\n      </a>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/user/login.component.html\n// module id = ./client/src/app/user/login.component.html\n// module chunks = main","import { Component, OnDestroy } from '@angular/core';\n\nimport { AuthService } from './auth.service';\nimport { User } from './user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnDestroy {\n  public email: string;\n  public password: string;\n\n  constructor(public authService: AuthService) {}\n\n  public login(): void {\n    this.authService.login(this.email, this.password);\n  }\n\n  ngOnDestroy() {\n    this.authService.error = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/user/login.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Router } from '@angular/router';\nimport 'rxjs/add/operator/map';\n\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-oauth',\n  template: ``\n})\nexport class OauthComponent implements OnInit {\n  constructor(\n    public authService: AuthService,\n    private _router: Router,\n    private _http: Http\n  ) {}\n\n  ngOnInit() {\n    // Get and set jwt and user after redirect from oauth authentication\n    this._http.get('/auth/oauth/token')\n      .map(res => res.json())\n      .subscribe(res => {\n        const redirect = localStorage['redirect'] || '/';\n        this.authService.setAuthenticatedUser(res);\n        this._router.navigate([redirect]);\n      },\n        err => console.log);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/user/oauth.component.ts","module.exports = \"<div class=\\\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <form\\n      id=\\\"profileForm\\\"\\n      novalidate \\n      [formGroup]=\\\"profileForm\\\" \\n      (submit)=\\\"updateUser()\\\">\\n      <fieldset>\\n        <legend>Profile</legend>\\n        <div\\n          class=\\\"form-group\\\"\\n          [class.has-error]=\\\"\\n            !profileForm.get('email').valid\\n              && profileForm.get('email').touched\\\">\\n          <label class=\\\"control-label\\\" for=\\\"email\\\">\\n            <strong>Email *</strong>\\n          </label>\\n          <input\\n            class=\\\"form-control\\\" \\n            id=\\\"email\\\"\\n            name=\\\"email\\\"\\n            type=\\\"email\\\"\\n            *ngIf=\\\"!user.oauth\\\"\\n            [formControl]=\\\"profileForm.get('email')\\\"/>\\n          <p *ngIf=\\\"user.oauth\\\">{{user.email}}</p>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"profileForm.get('email').hasError('required')\\\">\\n            Email is required\\n          </span>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"profileForm.get('email').hasError('pattern')\\\">\\n            Must be a proper email\\n          </span>\\n        </div>\\n        <div\\n          class=\\\"form-group\\\"\\n          [class.has-error]=\\\"\\n            !profileForm.get('profile').get('name').valid\\n              && profileForm.get('profile').get('name').touched\\\">\\n          <label class=\\\"control-label\\\" for=\\\"name\\\">\\n            <strong>Name *</strong>\\n          </label>\\n          <input\\n            class=\\\"form-control\\\" \\n            id=\\\"name\\\"\\n            name=\\\"name\\\"\\n            type=\\\"text\\\"\\n            [formControl]=\\\"profileForm.get('profile').get('name')\\\"/>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"profileForm.get('profile')\\n              .get('name').hasError('required')\\\">\\n            Name is required\\n          </span>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"profileForm.get('profile')\\n              .get('name').hasError('minlength')\\\">\\n            Name requires at least three characters\\n          </span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\" for=\\\"gender\\\">\\n            Gender\\n          </label>\\n          <input\\n            class=\\\"form-control\\\" \\n            id=\\\"gender\\\"\\n            name=\\\"gender\\\"\\n            type=\\\"text\\\"\\n            [formControl]=\\\"profileForm.get('profile').get('gender')\\\"/>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\" for=\\\"location\\\">\\n            Location\\n          </label>\\n          <input\\n            class=\\\"form-control\\\" \\n            id=\\\"location\\\"\\n            name=\\\"location\\\"\\n            type=\\\"text\\\"\\n            [formControl]=\\\"profileForm.get('profile').get('location')\\\"/>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\" for=\\\"website\\\">\\n            Web site\\n          </label>\\n          <input\\n            class=\\\"form-control\\\" \\n            id=\\\"website\\\"\\n            name=\\\"website\\\"\\n            type=\\\"text\\\"\\n            [formControl]=\\\"profileForm.get('profile').get('website')\\\"/>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\" for=\\\"website\\\">\\n            API KEY\\n          </label>\\n          <span>\\n            {{user._id}}\\n          </span>\\n        </div>\\n        <button\\n          class=\\\"btn btn-primary\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"profileForm.invalid\\\">\\n          Update Profile\\n        </button>\\n      </fieldset>\\n    </form>\\n\\n    <br />\\n    <br />\\n\\n    <div>\\n      <img\\n        *ngIf=\\\"profilePic && !uploader.queue[0]\\\"\\n        src=\\\"{{profilePic}}\\\"\\n        style=\\\"width: 100%;\\\"/>\\n      <div *ngIf=\\\"uploading\\\"><i class=\\\"fa fa-spinner fa-pulse\\\"></i></div>\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" (change)=\\\"detectChanges()\\\"/>\\n      <br />\\n      <button\\n        class=\\\"btn btn-default\\\"\\n        (click)=\\\"startUpload()\\\"\\n        [disabled]=\\\"!uploader.queue[0]\\\">\\n        Upload Picture\\n      </button>\\n    </div>\\n\\n    <br />\\n    <br />\\n\\n    <form\\n      id=\\\"passwordForm\\\"\\n      novalidate\\n      *ngIf=\\\"!user.oauth\\\"\\n      [formGroup]=\\\"passwordForm\\\"\\n      (submit)=\\\"changePassword()\\\">\\n      <fieldset>\\n        <legend>Change Password</legend>\\n        <div\\n          class=\\\"form-group\\\"\\n          [class.has-error]=\\\"!passwordForm.get('password').valid\\n              && passwordForm.get('password').touched\\\">\\n          <label class=\\\"control-label\\\" for=\\\"password\\\">\\n            Password\\n          </label>\\n          <input\\n            class=\\\"form-control\\\" \\n            id=\\\"password\\\"\\n            name=\\\"password\\\"\\n            type=\\\"password\\\"\\n            [formControl]=\\\"passwordForm.get('password')\\\"/>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"passwordForm.get('password').hasError('minlength')\\\">\\n            Password must contain at least 6 characters\\n          </span>\\n        </div>\\n        <div\\n          class=\\\"form-group\\\"\\n          [class.has-error]=\\\"!passwordForm.get('confirmPassword').valid\\n              && passwordForm.get('confirmPassword').touched\\\">\\n          <label class=\\\"control-label\\\" for=\\\"confirmPassword\\\">\\n            Confirm Password\\n          </label>\\n          <input\\n            class=\\\"form-control\\\" \\n            id=\\\"confirmPassword\\\"\\n            name=\\\"confirmPassword\\\"\\n            type=\\\"password\\\"\\n            [formControl]=\\\"passwordForm.get('confirmPassword')\\\"/>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"passwordForm.get('confirmPassword')\\n              .hasError('minlength')\\\">\\n            Password must contain at least 6 characters\\n          </span>\\n        </div>\\n        <button\\n          class=\\\"btn btn-primary\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"passwordForm.invalid\\\">\\n          Change Password\\n        </button>\\n      </fieldset>\\n    </form>\\n    <br />\\n    <br />\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"message\\\">\\n      {{message}}\\n    </div>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"authService.error\\\">\\n      {{authService.error}}\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/user/profile.component.html\n// module id = ./client/src/app/user/profile.component.html\n// module chunks = main","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FileUploader } from 'ng2-file-upload';\n\nimport { AuthService } from './auth.service';\n\nconst uploadOptions = {\n  url: '/api/photos/upload',\n  authToken: localStorage['id_token']\n};\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent implements OnInit {\n  public message: String = '';\n  public passwordForm: FormGroup;\n  public profileForm: FormGroup;\n  public uploader: FileUploader = new FileUploader(uploadOptions);\n  public uploading = false;\n  public user = this.authService.user();\n  public profilePic = this.user.profile.picture;\n\n  constructor(\n    public authService: AuthService,\n    private _detector: ChangeDetectorRef,\n    private _fb: FormBuilder\n  ) {}\n\n  public changePassword(): void {\n    const {password, confirmPassword} = this.passwordForm.value;\n    this.authService.changePassword(password, confirmPassword)\n      .subscribe(res => this._flashMessage('Password updated'),\n                 err => this._flashError(JSON.parse(err._body)[0].msg));\n    this.passwordForm.patchValue({\n      password: '',\n      confirmPassword: ''\n    });\n  }\n\n  /**\n   * Detect changes to component. Needed because file-upload plugin isn't\n   * detecting changes on its own.\n   */\n  public detectChanges(): void {\n    this._detector.detectChanges();\n  }\n\n  public startUpload(): void {\n    this.uploading = true;\n    this.uploader.queue[0].upload();\n  }\n\n  public updateUser(): void {\n    const user = this.profileForm.value;\n    this.authService.updateUser(user)\n      .subscribe(res => this._flashMessage('Profile updated'),\n                 err => this._flashError('Could not update profile'));\n  }\n\n  private _flashError(errMessage): void {\n    this.authService.error = errMessage;\n    setTimeout(() => this.authService.error = null, 3000);\n  }\n\n  private _flashMessage(message): void {\n    this.message = message;\n    setTimeout(() => this.message = null, 3000);\n  }\n\n  ngOnInit() {\n    this.profileForm = this._fb.group({\n      'email': [this.user.email, [\n        Validators.required,\n        Validators.pattern(this.authService.emailPattern)\n      ]],\n      'profile': this._fb.group({\n        'name': [this.user.profile.name, [\n          Validators.required,\n          Validators.minLength(3)\n        ]],\n        'gender': [this.user.profile.gender],\n        'location': [this.user.profile.location],\n        'website': [this.user.profile.website],\n      })\n    });\n    this.passwordForm = this._fb.group({\n      'password': ['', Validators.minLength(6)],\n      'confirmPassword': ['', Validators.minLength(6)]\n    });\n    this.uploader.onSuccessItem = (item, fileUrl) => {\n      this.profilePic = fileUrl;\n      this.uploader.queue.splice(0, 1);\n      this.uploading = false;\n      this.detectChanges();\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/user/profile.component.ts","module.exports = \"<div class=\\\"jumbotron col-sm-6 col-sm-offset-2\\\">\\n  <form novalidate [formGroup]=\\\"resetForm\\\" (submit)=\\\"reset()\\\">\\n    <fieldset>\\n      <legend>Reset Password</legend>\\n      <div\\n        class=\\\"form-group\\\"\\n        [class.has-error]=\\\"!resetForm.controls['password'].valid\\n          && resetForm.controls['password'].touched\\\">\\n        <label class=\\\"control-label\\\" for=\\\"password\\\">\\n          Password\\n        </label>\\n        <input\\n          class=\\\"form-control\\\" \\n          id=\\\"password\\\"\\n          type=\\\"password\\\"\\n          [formControl]=\\\"resetForm.controls['password']\\\"/>\\n        <span\\n          class=\\\"help-block\\\"\\n          *ngIf=\\\"resetForm.controls['password'].hasError('required')\\n            && resetForm.controls['password'].touched\\\">\\n          Password is required\\n        </span>\\n        <span\\n          class=\\\"help-block\\\"\\n          *ngIf=\\\"resetForm.controls['password'].hasError('minlength')\\\">\\n          Must be at least 6 characters long\\n        </span>\\n      </div>\\n      <div\\n        class=\\\"form-group\\\"\\n        [class.has-error]=\\\"!resetForm.controls['confirmPassword'].valid\\n          && resetForm.controls['confirmPassword'].touched\\\">\\n        <label class=\\\"control-label\\\" for=\\\"confirmPassword\\\">\\n          Confirm Password\\n        </label>\\n        <input\\n          class=\\\"form-control\\\" \\n          id=\\\"confirmPassword\\\"\\n          type=\\\"password\\\"\\n          [formControl]=\\\"resetForm.controls['confirmPassword']\\\"/>\\n        <span\\n          class=\\\"help-block\\\"\\n          *ngIf=\\\"resetForm.controls['confirmPassword'].hasError('required')\\n            && resetForm.controls['confirmPassword'].touched\\\">\\n          Password is required\\n        </span>\\n        <span\\n          class=\\\"help-block\\\"\\n          *ngIf=\\\"resetForm.controls['confirmPassword'].hasError('minlength')\\\">\\n          Must be at least 6 characters long\\n        </span>\\n      </div>\\n      <button\\n        type=\\\"submit\\\"\\n        class=\\\"btn btn-primary\\\"\\n        [disabled]=\\\"resetForm.invalid\\\">\\n        Reset Password\\n      </button>\\n    </fieldset>\\n  </form>\\n  <br />\\n  <br />\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"message\\\">\\n    {{message}}\\n  </div>\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"authService.error\\\">\\n    {{authService.error}}\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/user/reset-password.component.html\n// module id = ./client/src/app/user/reset-password.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html'\n})\nexport class ResetPasswordComponent implements OnInit {\n  public resetForm: FormGroup;\n  public message = '';\n  private _resetToken: string;\n\n  constructor(\n    public authService: AuthService,\n    private _fb: FormBuilder,\n    private _route: ActivatedRoute\n  ) {}\n\n  public reset(): void {\n    const {password, confirmPassword} = this.resetForm.value;\n    this.authService.resetPassword(password, confirmPassword, this._resetToken)\n      .subscribe(res => this._flashMessage('Password reset'),\n                 err => this._flashError(JSON.parse(err._body).msg[0].msg));\n  }\n\n  private _flashError(errMessage): void {\n    this.authService.error = errMessage;\n    setTimeout(() => this.authService.error = null, 3000);\n  }\n\n  private _flashMessage(message): void {\n    this.message = message;\n    setTimeout(() => this.message = null, 3000);\n  }\n\n  ngOnInit() {\n    this.resetForm = this._fb.group({\n      'password': ['', [\n        Validators.required,\n        Validators.minLength(6)\n      ]],\n      'confirmPassword': ['', [\n        Validators.required,\n        Validators.minLength(6)\n      ]]\n    });\n    this._route.params\n      .subscribe(params => this._resetToken = params['token']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/user/reset-password.component.ts","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3\\\">\\n    <div class=\\\"jumbotron\\\">\\n      <h2>Fill your data.</h2>\\n      <form novalidate [formGroup]=\\\"signupForm\\\" (submit)=\\\"signup()\\\">\\n        <div\\n         class=\\\"form-group\\\"\\n          [class.has-error]=\\\"!signupForm.get('email').valid\\n            && signupForm.get('email').touched\\\">\\n          <label class=\\\"control-label\\\" for=\\\"email\\\">\\n            <strong>Email *</strong>\\n          </label>\\n          <input\\n            class=\\\"form-control\\\" \\n            id=\\\"email\\\"\\n            name=\\\"email\\\"\\n            type=\\\"email\\\"\\n            [formControl]=\\\"signupForm.get('email')\\\"/>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"signupForm.get('email').hasError('required')\\n              && signupForm.get('email').touched\\\">\\n            Email is required\\n          </span>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"signupForm.get('email').hasError('pattern')\\n              && signupForm.get('email').touched\\\">\\n            Must be a proper email\\n          </span>\\n        </div>\\n        <div\\n          class=\\\"form-group\\\"\\n          [class.has-error]=\\\"\\n            !signupForm.get('profile').get('name').valid\\n              && signupForm.get('profile').get('name').touched\\\">\\n          <label class=\\\"control-label\\\" for=\\\"name\\\">\\n            <strong>Name *</strong>\\n          </label>\\n          <input\\n            class=\\\"form-control\\\" \\n            id=\\\"name\\\"\\n            name=\\\"name\\\"\\n            type=\\\"text\\\"\\n            [formControl]=\\\"signupForm.get('profile').get('name')\\\"/>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"signupForm.get('profile').get('name').hasError('required')\\n              && signupForm.get('profile').get('name').touched\\\">\\n            Name is required\\n          </span>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"signupForm.get('profile').get('name').hasError('minlength')\\n              && signupForm.get('profile').get('name').touched\\\">\\n            Name requires at least three characters\\n          </span>\\n        </div>\\n        <div\\n          class=\\\"form-group\\\"\\n          [class.has-error]=\\\"!signupForm.get('password').valid\\n            && signupForm.get('password').touched\\\">\\n          <label class=\\\"control-label\\\" for=\\\"password\\\">\\n            <strong>Password *</strong>\\n          </label>\\n          <input \\n            class=\\\"form-control\\\" \\n            id=\\\"password\\\"\\n            name=\\\"password\\\"\\n            type=\\\"password\\\"\\n            [formControl]=\\\"signupForm.get('password')\\\"/>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"signupForm.get('password').hasError('required')\\n              && signupForm.get('password').touched\\\">\\n            Password is required\\n          </span>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"signupForm.get('password').hasError('minlength')\\n              && signupForm.get('password').touched\\\">\\n            Password requires at least six characters\\n          </span>\\n        </div>\\n        <div \\n          class=\\\"form-group\\\"\\n          [class.has-error]=\\\"!signupForm.get('confirmPassword').valid\\n            && signupForm.get('confirmPassword').touched\\\">\\n          <label class=\\\"control-label\\\" for=\\\"confirmPassword\\\">\\n            <strong>Confirm Password *</strong>\\n          </label>\\n          <input\\n            class=\\\"form-control\\\" \\n            id=\\\"confirmPassword\\\"\\n            name=\\\"confirmPassword\\\"\\n            type=\\\"password\\\"\\n            [formControl]=\\\"signupForm.get('confirmPassword')\\\"/>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"signupForm.get('confirmPassword').hasError('required')\\n              && signupForm.get('confirmPassword').touched\\\">\\n            Password is required\\n          </span>\\n          <span\\n            class=\\\"help-block\\\"\\n            *ngIf=\\\"signupForm.get('confirmPassword').hasError('minlength')\\n              && signupForm.get('confirmPassword').touched\\\">\\n            Password requires at least six characters\\n          </span>\\n        </div>\\n        <div *ngIf=\\\"authService.error\\\" class=\\\"alert alert-danger\\\">\\n          {{authService.error}}\\n        </div>\\n        <button\\n          class=\\\"btn btn-primary\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"signupForm.invalid\\\">\\n          Sign Up!\\n        </button>\\n      </form>\\n      <hr>\\n      <a class=\\\"btn btn-default\\\" href=\\\"/auth/google\\\">\\n        <i class=\\\"fa fa-google\\\"></i> \\n        Sign Up with Google\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/app/user/signup.component.html\n// module id = ./client/src/app/user/signup.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthService } from './auth.service';\nimport { User } from './user';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html'\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  public signupForm: FormGroup;\n\n  constructor(public authService: AuthService, private _fb: FormBuilder) {}\n\n  public signup(): void {\n    const user: User = this.signupForm.value;\n    this.authService.signup(user);\n  }\n\n  ngOnInit() {\n    this.signupForm = this._fb.group({\n      'email': ['', [\n        Validators.required,\n        Validators.pattern(this.authService.emailPattern)\n      ]],\n      'password': ['', [\n        Validators.required,\n        Validators.minLength(6)\n      ]],\n      'confirmPassword': ['', [\n        Validators.required,\n        Validators.minLength(6)\n      ]],\n      'profile': this._fb.group({\n        'name': ['', [\n          Validators.required,\n          Validators.minLength(3)\n        ]]\n      })\n    });\n  }\n\n  ngOnDestroy() {\n    this.authService.error = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/user/signup.component.ts","import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class UnauthenticatedGuard implements CanActivate {\n    constructor(private _authService: AuthService, private _router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n      return this._authService.getAuthenticatedState()\n        .then(isAuthenticated => {\n          if (isAuthenticated) {\n            this._router.navigate(['/']);\n          }\n\n          return !isAuthenticated;\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/user/unauthenticated.guard.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FileUploadModule } from 'ng2-file-upload';\n\nimport { LoginComponent } from './login.component';\nimport { SignupComponent } from './signup.component';\nimport { ProfileComponent } from './profile.component';\nimport { ForgotPasswordComponent } from './forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password.component';\nimport { OauthComponent } from './oauth.component';\nimport { AuthService } from './auth.service';\nimport { AuthenticatedGuard } from './authenticated.guard';\nimport { UnauthenticatedGuard } from './unauthenticated.guard';\nimport { UserRoutingModule } from './user.routes';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent,\n    ProfileComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n    OauthComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileUploadModule,\n\n    UserRoutingModule\n  ],\n  exports: [\n  ],\n  providers: [\n    AuthService,\n    AuthenticatedGuard,\n    UnauthenticatedGuard\n  ]\n})\nexport class UserModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/user/user.module.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\nimport { SignupComponent } from './signup.component';\nimport { ProfileComponent } from './profile.component';\nimport { OauthComponent } from './oauth.component';\nimport { ForgotPasswordComponent } from './forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password.component';\nimport { AuthenticatedGuard } from './authenticated.guard';\nimport { UnauthenticatedGuard } from './unauthenticated.guard';\n\nconst USER_ROUTES: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [UnauthenticatedGuard],\n    data: {\n      title: 'Login'\n    }\n  },\n  {\n    path: 'signup',\n    component: SignupComponent,\n    canActivate: [UnauthenticatedGuard],\n    data: {\n      title: 'Signup'\n    }\n  },\n  {\n    path: 'oauth',\n    component: OauthComponent\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate: [AuthenticatedGuard],\n    data: {\n      title: 'Profile'\n    }\n  },\n  {\n    path: 'forgot-password',\n    component: ForgotPasswordComponent,\n    canActivate: [UnauthenticatedGuard],\n    data: {\n      title: 'Forgot Password'\n    }\n  },\n  {\n    path: 'reset/:token',\n    component: ResetPasswordComponent,\n    canActivate: [UnauthenticatedGuard],\n    data: {\n      title: 'Password Reset'\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(USER_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class UserRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/app/user/user.routes.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/environments/environment.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/main.ts"],"sourceRoot":"webpack:///"}